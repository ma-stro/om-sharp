
(:patch
 (:name "factorial")
 (:doc "")
 (:info
  (:created "2018/01/18 11:54:31")
  (:modified "2020/06/20 23:39:57")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (884 408)) (:position (182 206)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :io)
   (:reference (:out (:type omout) (:name "out") (:index 1) (:doc "")))
   (:group-id nil)
   (:name "out")
   (:x 204)
   (:y 293)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "out-value")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 0))
  (:box
   (:type :io)
   (:reference (:in (:type omin) (:index 1) (:name "n") (:doc "")))
   (:group-id nil)
   (:name "n")
   (:x 204)
   (:y 83)
   (:w 40)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 0.0)) (:t-or-nil t)))
   (:border 0)
   (:roundness 0)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs)
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "factorial")
      (:type "opat"))))
   (:group-id nil)
   (:name "factorial")
   (:x 298)
   (:y 169)
   (:w 79)
   (:h 52)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:filename
    (:pathname
     (:directory
      (:absolute
       "Users"
       "bresson"
       "SRC"
       "cac-t-u-s"
       "om-sharp"
       "help-patches"
       "Core features"))
     (:device :unspecific)
     (:host :unspecific)
     (:name "factorial")
     (:type "opat")))
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "n")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :special)
   (:reference if)
   (:group-id nil)
   (:name "IF")
   (:x 178)
   (:y 262)
   (:w 102)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "THEN")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference om=)
   (:group-id nil)
   (:name "om=")
   (:x 128)
   (:y 210)
   (:w 62)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NUM1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NUM2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 156)
   (:y 182)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 5))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 270)
   (:y 227)
   (:w 60)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference 1-)
   (:group-id nil)
   (:name "1-")
   (:x 314)
   (:y 138)
   (:w 49)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "X")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :function)
   (:reference print)
   (:group-id nil)
   (:name "print")
   (:x 115)
   (:y 148)
   (:w 62)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SOMETHING")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device :unspecific)
      (:host :unspecific)
      (:name "factorial")
      (:type "opat"))))
   (:group-id nil)
   (:name "factorial")
   (:x 611)
   (:y 164)
   (:w 150)
   (:h 140)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:filename
    (:pathname
     (:directory
      (:absolute
       "Users"
       "bresson"
       "SRC"
       "cac-t-u-s"
       "om-sharp"
       "help-patches"
       "Core features"))
     (:device :unspecific)
     (:host :unspecific)
     (:name "factorial")
     (:type "opat")))
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "n") (:value 5) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 670)
   (:y 113)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 10))
  (:comment
   (:x 653)
   (:y 84)
   (:w 85)
   (:h 22)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "=> use it here !")
   (:id 11))
  (:comment
   (:x 243)
   (:y 20)
   (:w 217)
   (:h 21)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 12) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "RECURSIVE VISUAL PROGRAM")
   (:id 12))
  (:comment
   (:x 393)
   (:y 190)
   (:w 123)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<= this patch is here !")
   (:id 13)))
 (:connections
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 3 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color
       (:color
        0.37823188304901123D0
        0.6176914572715759D0
        0.787287712097168D0
        1.0D0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))))